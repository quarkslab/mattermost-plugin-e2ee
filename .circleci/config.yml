# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
version: 2.1

description: |
  Stuff to do CI for mattermost plugins

orbs:
  aws-s3: circleci/aws-s3@1.0.16

executors:
  default:
    docker:
      - image: circleci/golang:1.16.0-node

commands:
  deploy:
    parameters:
      bucket:
        type: string
      filename:
        type: string
    steps:
      - aws-s3/copy:
          from: << parameters.filename >>
          to: << parameters.bucket >>
          arguments: '--acl public-read --cache-control no-cache'

  install-golangci-lint:
    description: Install golangci-lint
    parameters:
      version:
        type: string
        default: 1.31.0
      gobin:
        type: string
        default: /go/bin
      prefix:
        type: string
        default: v1
        description: Prefix for cache key to store the binary.
    steps:
      - restore_cache:
          name: Restore golangci-lint cache
          keys: ['<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>']
      - run:
          name: Install golangci-lint
          command: |
            mkdir -p << parameters.gobin >>
            command -v << parameters.gobin >>/golangci-lint && exit
            download=https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh
            wget -O- -q $download | sh -s -- -b << parameters.gobin >>/ v<< parameters.version >>
      - save_cache:
          name: Save golangci-lint cache
          key: '<< parameters.prefix >>-golangci-lint-{{ arch }}-<< parameters.version >>'
          paths: [<< parameters.gobin >>/golangci-lint]

aliases:
- &restore_cache_go
  restore_cache:
    keys:
      - go-mod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
      - go-mod-v1-{{ .Branch }}
      - go-mod-v1
- &save_cache_go
  save_cache:
    key: go-mod-v1-{{ .Branch }}-{{ checksum "go.sum" }}
    paths:
    - "/go/pkg/mod"
- &restore_cache_npm
  restore_cache:
    keys:
      - npm-v1-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      - npm-v1-{{ .Branch }}
      - npm-v1
- &install_npm
  run:
    command: cd webapp && npm install
    no_output_timeout: 60m
- &save_cache_npm
  save_cache:
    key: npm-v1-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
    paths:
    - "webapp/node_modules"

jobs:
  lint:
    executor:
      name: default
    resource_class: xlarge
    steps:
      - checkout
      - install-golangci-lint
      - *restore_cache_go
      - *restore_cache_npm
      - *install_npm
      - *save_cache_npm
      - run:
          name: Checking code style
          command: make check-style
      - *save_cache_go
      - run: go mod tidy -v
      - run:
          name: Checking diff of go mod files
          command: |
            git --no-pager diff --exit-code go.mod go.sum || (echo "Please run \"go mod tidy\" and commit the changes in go.mod and go.sum." && exit 1)
      - run: make apply
      - run:
          name: Checking diff of generated manifest files
          command: |
            git --no-pager diff --exit-code *manifest.* || (echo "Please run \"make apply\" and commit the changes in the generated manifests." && exit 1)
      - *save_cache_go

  test:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache_go
      - *restore_cache_npm
      - *install_npm
      - *save_cache_npm
      - run:
          command: make test
          name: Tests
      - *save_cache_go

  build:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache_go
      - *restore_cache_npm
      - *install_npm
      - *save_cache_npm
      - run:
          name: Building Plugin Bundle
          command: make dist
      - run:
          name: Generating Release Notes
          command: |
            printf "Supported Mattermost Server Versions: **$(cat plugin.json | jq .min_server_version -r)+** \n## Enhancements\n\n## Fixes\n"  >> dist/release-notes.md
            if [[ $(git tag -l | wc -l) -eq 1 ]]; then
              git log --pretty='format:- %h %s' --abbrev-commit --no-decorate --no-color $(git rev-list --max-parents=0 HEAD) HEAD >> dist/release-notes.md
            else
              git log --pretty='format:- %h %s' --abbrev-commit --no-decorate --no-color $(git describe --tags --abbrev=0 $(git describe --tags --abbrev=0)^)..HEAD >> dist/release-notes.md
            fi
      - persist_to_workspace:
          root: dist
          paths:
            - "*.tar.gz"
            - "release-notes.md"
      - store_artifacts:
          path: dist
      - *save_cache_go

  deploy-release-github:
    docker:
      - image: cibuilds/github:0.13
    steps:
      - attach_workspace:
          at: dist
      - run:
          name: "Publish Release on Github"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -b "$(< ./dist/release-notes.md)" -c ${CIRCLE_SHA1} -n ${CIRCLE_TAG} -delete ${CIRCLE_TAG} dist/*.tar.gz


workflows:
  version: 2
  ci:
    jobs:
      - lint:
          filters:
            tags:
              only: /^v.*/
      - test:
          filters:
            tags:
              only: /^v.*/
      - build:
          filters:
            tags:
              only: /^v.*/
      - deploy-release-github:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context: github-token
          requires:
            - lint
            - test
            - build
